name: Publish Proto Artifacts

on:
  push:
    branches:
      - main
    paths:
      - 'proto/**.proto'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Generate Code via Docker
        run: |
          docker build -t proto-generator .
          docker create --name temp-proto-container proto-generator
          mkdir -p output
          docker cp temp-proto-container:/generated/. ./output
          docker rm temp-proto-container

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Publish Java Artifact to GitHub Packages
        run: |
          cd output/java
          cat <<EOF > pom.xml
          <project xmlns="http://maven.apache.org/POM/4.0.0"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
              <modelVersion>4.0.0</modelVersion>
              <groupId>com.example.proto</groupId>
              <artifactId>order-proto-java</artifactId>
              <version>1.0.${{ github.run_number }}</version>
              <packaging>jar</packaging>
              <distributionManagement>
                  <repository>
                      <id>github</id>
                      <name>GitHub ${{ github.repository_owner }} Apache Maven Packages</name>
                      <url>https://maven.pkg.github.com/${{ github.repository }}</url>
                  </repository>
              </distributionManagement>
          </project>
          EOF
          mvn -B package deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com/'
          scope: '@${{ github.repository_owner }}'

      - name: Publish TypeScript Artifact to GitHub Packages
        run: |
          cd output/ts
          cat <<EOF > package.json
          {
            "name": "@${{ github.repository_owner }}/order-proto-ts",
            "version": "1.0.${{ github.run_number }}",
            "repository": "https://github.com/${{ github.repository }}.git"
          }
          EOF
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
